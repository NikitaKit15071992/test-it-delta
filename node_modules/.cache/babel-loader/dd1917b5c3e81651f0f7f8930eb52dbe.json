{"ast":null,"code":"var _jsxFileName = \"/Users/Nikita/Documents/progects/react-progect/src/Elements/Cards/cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Cards.css';\nimport Modal from '../Modal/Modal';\nimport { getCardsDataAPI } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpen, setIsOpen] = useState(false);\n  const [cardsData, setCardsData] = useState([]);\n  const [cardKey, setCardKey] = useState(0);\n  useEffect(() => {\n    getCardsDataAPI(setCardsData, setIsLoading);\n  }, []);\n\n  const handlerOnCardClick = card => {\n    setCardKey(card.id);\n    setIsOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-loading\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      children: cardsData.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: () => handlerOnCardClick(card),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card__image\",\n          src: `${card.url}`,\n          alt: card.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card__text\",\n          children: [\"id: \", card.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setIsOpen: setIsOpen,\n      cardId: cardKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Cards, \"aDieX0Y97ZwE5REpZYzNgfK1/78=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","Modal","getCardsDataAPI","Cards","isLoading","setIsLoading","isOpen","setIsOpen","cardsData","setCardsData","cardKey","setCardKey","handlerOnCardClick","card","id","map","url"],"sources":["/Users/Nikita/Documents/progects/react-progect/src/Elements/Cards/cards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Cards.css'\nimport Modal from '../Modal/Modal'\nimport { getCardsDataAPI } from '../../api'\n\nfunction Cards() {\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [cardsData, setCardsData] = useState([])\n\tconst [cardKey, setCardKey] = useState(0)\n\n\tuseEffect(() => {\n\t\tgetCardsDataAPI(setCardsData, setIsLoading)\n\t}, [])\n\n\tconst handlerOnCardClick = (card) => {\n\t\tsetCardKey(card.id)\n\t\tsetIsOpen(true)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{isLoading && <div className='cards-loading'>Loading</div>}\n\t\t\t{!isLoading && (\n\t\t\t\t<div className='cards-wrapper'>\n\t\t\t\t\t{cardsData.map((card) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='card'\n\t\t\t\t\t\t\tkey={card.id}\n\t\t\t\t\t\t\tonClick={() => handlerOnCardClick(card)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='card__image'\n\t\t\t\t\t\t\t\tsrc={`${card.url}`}\n\t\t\t\t\t\t\t\talt={card.id}\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t<h3 className='card__text'>id: {card.id}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{isOpen && <Modal setIsOpen={setIsOpen} cardId={cardKey} />}\n\t\t</div>\n\t)\n}\n\nexport default Cards\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACfG,eAAe,CAACO,YAAD,EAAeJ,YAAf,CAAf;EACA,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMO,kBAAkB,GAAIC,IAAD,IAAU;IACpCF,UAAU,CAACE,IAAI,CAACC,EAAN,CAAV;IACAP,SAAS,CAAC,IAAD,CAAT;EACA,CAHD;;EAKA,oBACC;IAAA,WACEH,SAAS,iBAAI;MAAK,SAAS,EAAC,eAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADf,EAEE,CAACA,SAAD,iBACA;MAAK,SAAS,EAAC,eAAf;MAAA,UACEI,SAAS,CAACO,GAAV,CAAeF,IAAD,iBACd;QACC,SAAS,EAAC,MADX;QAGC,OAAO,EAAE,MAAMD,kBAAkB,CAACC,IAAD,CAHlC;QAAA,wBAKC;UACC,SAAS,EAAC,aADX;UAEC,GAAG,EAAG,GAAEA,IAAI,CAACG,GAAI,EAFlB;UAGC,GAAG,EAAEH,IAAI,CAACC;QAHX;UAAA;UAAA;UAAA;QAAA,QALD,eAUC;UAAI,SAAS,EAAC,YAAd;UAAA,mBAAgCD,IAAI,CAACC,EAArC;QAAA;UAAA;UAAA;UAAA;QAAA,QAVD;MAAA,GAEMD,IAAI,CAACC,EAFX;QAAA;QAAA;QAAA;MAAA,QADA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,EAoBER,MAAM,iBAAI,QAAC,KAAD;MAAO,SAAS,EAAEC,SAAlB;MAA6B,MAAM,EAAEG;IAArC;MAAA;MAAA;MAAA;IAAA,QApBZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAwBA;;GAvCQP,K;;KAAAA,K;AAyCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}